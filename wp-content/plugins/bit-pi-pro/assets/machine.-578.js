globalThis.jotaiAtomCache=globalThis.jotaiAtomCache||{cache:new Map,get(a,n){return this.cache.has(a)?this.cache.get(a):(this.cache.set(a,n),n)}};function m(a,n){var s;for(const{db:o,id:p}of n)((s=a.db)==null?void 0:s[o])!==void 0&&a.setComponent(p,c=>{var r;c.value=(r=a.db)==null?void 0:r[o]})}const b=({$:a,componentId:n,dbKey:s,fields:o,mapFieldKey:p,mapFieldValue:c})=>{var g;const r=((g=a.db)==null?void 0:g[s])||[],l=new Map(r.map(e=>[e[0].value,e])),i=[],d=[];o==null||o.forEach(e=>{const t=l.get(e.value);if(t&&l.delete(e.value),!e.required){t&&(t[0].disabled=!1,d.push(t));return}if(t){t[0].disabled=!0,i.push(t);return}i.push([{disabled:!0,name:p,value:e.value},{name:c,value:[]}])});const u=[...i,...d];if(l.size)for(const e of l.values())e[0].disabled=!1,u.push(e);const h=i.length?Array.from({length:i.length},(e,t)=>t):[];return a.setComponent(n,e=>{a.util.isRepeaterFieldComponent(e)&&(e.value=u,e.nonRemovableRows=h)}),a.setDb(e=>{e[s]=u,e.nonRemovableRows=h}),{repeaterValue:u,requiredFieldIndexes:h}};export{b as h,m as s};
