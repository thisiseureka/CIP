import{a3 as i,a4 as c}from"./_applist-952.js";import{_ as n}from"./main-red-poems-invite.js";import{s as r}from"./machine.-578.js";import{h as s,a as t,c as h}from"./slackcom-285.js";import"./lodash-840.js";import"./mutative-12.js";globalThis.jotaiAtomCache=globalThis.jotaiAtomCache||{cache:new Map,get(e,a){return this.cache.has(e)?this.cache.get(e):(this.cache.set(e,a),a)}};const _=i(({helpers:e})=>({states:{components:[h(e),{componentName:e.componentName.mixInput,helperText:n("Name for the channel to be created. Channel names can only contain lowercase letters, numbers, hyphens, and underscores, and must be 80 characters or fewer."),id:"channel-name",label:n("Channel Name"),onChange:"SET_CHANNEL_NAME",path:"name",render:"IF_CONNECTION_SELECTED",required:!0,value:[]},{componentName:e.componentName.switch,helperText:n("Switch ON if you want to create a private channel instead of a public one."),id:"is-private",label:n("Is Private?"),onChange:"SET_PRIVATE",path:"is_private",render:"IF_CONNECTION_SELECTED",value:!1}]},actions:{SET_CONNECTION:t("connection"),IF_CONNECTION_SELECTED:({$:a})=>{var o;return c((o=a.getComponent("connection-id"))==null?void 0:o.value)},SET_CHANNEL_NAME:t("channelName"),SET_PRIVATE:t("isPrivate"),CONNECTION_ADD_CHANGE:s,ON_MACHINE_LOAD:async({$:a})=>{r(a,[{db:"connection",id:"connection-id"},{db:"channelName",id:"channel-name"},{db:"isPrivate",id:"is-private"}])}}}));export{_ as default};
