import{a3 as m,a4 as h}from"./_applist-952.js";import{dx as d,_ as o}from"./main-red-poems-invite.js";import{s as C}from"./machine.-578.js";import"./lodash-840.js";import"./mutative-12.js";globalThis.jotaiAtomCache=globalThis.jotaiAtomCache||{cache:new Map,get(t,e){return this.cache.has(t)?this.cache.get(t):(this.cache.set(t,e),e)}};const b=async t=>d({headers:{Authorization:["Bearer ",{encryption:"hmac_decrypt",value:t}]},method:"GET",url:"https://connect.mailerlite.com/api/fields"}),N=async t=>d({headers:{accept:"application/json",Authorization:["Bearer ",{encryption:"hmac_decrypt",value:t}],"user-agent":"CustomUserAgent/1.0"},method:"GET",url:"https://connect.mailerlite.com/api/groups"});globalThis.jotaiAtomCache=globalThis.jotaiAtomCache||{cache:new Map,get(t,e){return this.cache.has(t)?this.cache.get(t):(this.cache.set(t,e),e)}};const p=async t=>{t.setComponent("field-map",a=>{a.loading=!0});const e=await t.getConnection("expires_in");if(!e){t.setComponent("field-map",a=>{a.loading=!1});return}const{data:n}=await b(e.auth_details.token);t.setComponent("field-map",a=>{var r;if(!t.util.isRepeaterFieldComponent(a))return;const i=a.fieldsMetaData[0],s=[{label:o("Email"),value:"email"}],l=(r=n==null?void 0:n.data)==null?void 0:r.map(u=>({label:u.name,value:u.key}));i.options=[...s,...l],a.loading=!1})},c=async t=>{t.setComponent("groups",i=>{i.loading=!0});const e=await t.getConnection("expires_in");if(!e){t.setComponent("groups",i=>{i.loading=!1});return}const{data:n,status:a}=await N(e.auth_details.token);if(a=="error"){t.setComponent("groups",i=>{t.util.isSelectComponent(i)&&(i.status=a,i.invalidMessage=n)});return}t.setComponent("groups",i=>{var s;t.util.isSelectComponent(i)&&(i.options=(s=n==null?void 0:n.data)==null?void 0:s.map(l=>({label:l.name,value:l.id})),i.loading=!1)})};globalThis.jotaiAtomCache=globalThis.jotaiAtomCache||{cache:new Map,get(t,e){return this.cache.has(t)?this.cache.get(t):(this.cache.set(t,e),e)}};const A=m(({helpers:t})=>({states:{components:[{addConnectionHelpingText:o('You can get your API Token from <a class="text-blue-600 underline" href="https://dashboard.mailerlite.com/integrations/api" target="_blank" rel="noopener noreferrer nofollow">here</a>'),componentName:t.componentName.connection,connectionsTypes:[{encryptKeys:["token"],label:o("Token"),type:"bearer_token",verifyConnection:{headers:{authorization:""},method:"GET",responseKeyMatch:["data"],url:"https://connect.mailerlite.com/api/fields"}}],fieldType:"config",id:"connection-id",label:o("Select Connection"),onConnectionAddChange:"CONNECTION_ADD_CHANGE",onConnectionChange:"SET_CONNECTION",render:!0,value:void 0},{addItemButtonLabel:"Add Field",componentName:t.componentName.repeaterField,fieldsMetaData:[{componentName:t.componentName.select,label:o("Field"),name:"mailerLiteField",options:[],showSearch:!0,style:{width:150},value:""},{componentName:t.componentName.mixInput,label:o("Value"),name:"value",value:[],wrapperClassName:"w-100"}],id:"field-map",label:o("Field Map"),nonRemovableRows:[0],onChange:"ON_CHANGE_FIELD_MAP_DATA",path:"fieldMap",render:"IF_CONNECTION_SELECTED",value:[[{disabled:!0,name:"mailerLiteField",value:"email"},{name:"value",value:[]}]]},{componentName:t.componentName.select,helperText:o("Add subscriber to groups."),id:"groups",label:o("Add Group"),mode:"multiple",onChange:"HANDLE_SUBSCRIBER_GROUPS",onRefetch:"REFETCH_GROUPS",options:[],path:"groups",render:"IF_CONNECTION_SELECTED",showSearch:!0,value:void 0},{componentName:t.componentName.select,defaultValue:"active",id:"subscriber-type",label:o("Subscription Type"),onChange:"HANDLE_SUBSCRIBER_TYPE",options:[{label:o("Active"),value:"active"},{label:o("Unsubscribed"),value:"unsubscribed"},{label:o("Bounced"),value:"bounced"},{label:o("Spam Complaints"),value:"junk"},{label:o("Unconfirmed"),value:"unconfirmed"}],path:"subscriberType",render:"IF_CONNECTION_SELECTED",value:"active"},{componentName:t.componentName.select,defaultValue:"no",helperText:o("Update Responses if the Subscriber is exist?"),id:"update-subscriber",label:o("Update Subscriber"),onChange:"HANDLE_UPDATE_SUBSCRIBER",options:[{label:o("Yes"),value:"yes"},{label:o("No"),value:"no"}],path:"updateSubscriber",render:"IF_CONNECTION_SELECTED",value:"no"}]},actions:{CONNECTION_ADD_CHANGE:({$:e,e:n})=>{e.setThisComponent(a=>{e.util.isConnectionComponent(a)&&a.connectionsTypes.forEach(i=>{var s;i.type==="bearer_token"&&((s=i.verifyConnection)!=null&&s.headers)&&(i.verifyConnection.headers.authorization="Bearer "+n.token)})})},IF_CONNECTION_SELECTED:({$:e})=>{var n;return h((n=e.getComponent("connection-id"))==null?void 0:n.value)},REFETCH_GROUPS:async({$:e})=>{await c(e)},HANDLE_SUBSCRIBER_GROUPS:({$:e,e:n})=>{e.setThisComponent(a=>{a.value=n}),e.setDb(a=>{a.groups=n})},HANDLE_SUBSCRIBER_TYPE:({$:e,e:n})=>{e.setThisComponent(a=>{a.value=n}),e.setDb(a=>{a.subscriberType=n})},ON_CHANGE_FIELD_MAP_DATA:({$:e,e:n})=>{e.setThisComponent(a=>{a.value=n}),e.setDb(a=>{a.fieldMap=n})},HANDLE_UPDATE_SUBSCRIBER:({$:e,e:n})=>{e.setThisComponent(a=>{a.value=n}),e.setDb(a=>{a.updateSubscriber=n})},HANDLE_MIX_INPUT:({$:e,e:n})=>{e.setThisComponent(a=>{a.value=n})},ON_MACHINE_LOAD:async({$:e})=>{C(e,[{db:"connectionId",id:"connection-id"},{db:"fieldMap",id:"field-map"},{db:"groups",id:"groups"},{db:"subscriberType",id:"subscriber-type"},{db:"updateSubscriber",id:"update-subscriber"}]),await Promise.all([p(e),c(e)])},SET_CONNECTION:async({$:e,e:n})=>{e.setThisComponent(a=>{a.value=n}),e.setDb(a=>{a.connectionId=n}),await Promise.all([p(e),c(e)])}}}));export{A as default};
