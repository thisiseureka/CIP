!function(e){var t,i,n,a,r="[class^='mdw-turbulence-effect'], [class*=' mdw-turbulence-effect']",s=[],l=[],c=[],d=[],o=[],f=[],h=[],u={start:.8,end:1},$={start:.9,end:1};function m(){var t,i;n=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),a="true"===(t=e("body"),i="--fallback-circle",getComputedStyle(t[0]).getPropertyValue(i)),e("body").append('<div class="mdw-100vh" style="height: 100vh; display: none;"></div>'),e(r).each((function(t){var i=e(this);s[t]=i.find(".elementor-widget-image"),l[t]=s[t].find("img")}))}function p(){e(r).each((function(e){o[e]=l[e][0].getBoundingClientRect();var r=s[e].find("svg"),m=function(e,i,n,a,r=!1){var s=n/100*t,l=a/100*t,c=(e.top+i/2-s)/(l-s),d=Math.max(Math.min(c,1),0);return r?1-d:d}(o[e],d[e],90,60),p=u.start+(u.end-u.start)*m,g=$.start+($.end-$.start)*m,w=f[e]*m;r.find("image").css({filter:`brightness(${p})`,transform:`scale(${g})`}),a&&(i<768||n)?r.css("clip-path","circle"===h[e]?`circle(${w}px at 50% 50%)`:`ellipse(50% ${50*m}% at 50% 50%)`):"circle"===h[e]?r.find("circle").attr("r",w):r.find("path").attr("d",`M 0 ${d[e]/2} Q ${c[e]/2} ${d[e]/2+(d[e]-24)*m} ${c[e]} ${d[e]/2} Q ${c[e]/2} ${d[e]/2-(d[e]-24)*m} 0 ${d[e]/2}`)}))}e(document).ready(),e(window).on("scroll",p),e(window).on("load resize",(function(o){"load"===o.type&&m(),t=e(".mdw-100vh").height(),i=e(window).width(),e(r).each((function(e){c[e]=l[e].width(),d[e]=l[e].height(),f[e]=Math.sqrt(Math.pow(c[e]/2,2)+Math.pow(d[e]/2,2))+10,n&&!a&&f[e]>850&&(f[e]=850)})),e(r).each((function(t){var r,o,f=e(this),m=s[t].find(".elementor-widget-container"),p=(l[t][0],l[t][0],l[t].attr("srcset")?.split(" ")||[]),g=p[p.length-2]||l[t].attr("src"),w=(f.attr("class").match(/mdw-turbulence-effect\S*/)||[])[0]||"",v=w.split("-"),y=w.includes("blur")&&i>=768&&!n?'<feGaussianBlur in="displacement" stdDeviation="10"></feGaussianBlur>':"",M=`<circle cx="50%" cy="50%" fill="white" class="mask" style="filter: url(#MDWFilter${t+1});"></circle>`,b=.03,x=50,k=3;v.forEach(((e,t)=>{"resolution"!==e||isNaN(v[t+1])||(b=.003*parseFloat(v[t+1])),"area"!==e||isNaN(v[t+1])||(x=5*parseFloat(v[t+1]))})),x>100&&(k=1),y&&(s[t].addClass("blur"),b=.01,x=150,k=3),h[t]=w.includes("eye")?"eye":"circle","eye"===h[t]&&(s[t].addClass("eye"),b=y?0:.06,x=50,M=`<path d="M 0 ${d[t]/2} Q ${c[t]/2} ${3*d[t]/2-24} ${c[t]} ${d[t]/2} Q ${c[t]/2} ${24-d[t]/2} 0 ${d[t]/2}" fill="white" class="mask" style="filter: url(#MDWFilter${t+1});"></path>`),r=a&&(i<768||n)?"":`<defs>\n             <filter id="MDWFilter${t+1}">\n               <feTurbulence type="fractalNoise" baseFrequency="${b}" numOctaves="${k}" result="noise"></feTurbulence>\n               <feDisplacementMap in="SourceGraphic" in2="noise" scale="${x}" xChannelSelector="R" yChannelSelector="G"></feDisplacementMap>\n               ${y}\n             </filter>\n             <mask id="MDWCircle${t+1}">\n               ${M}\n             </mask>\n           </defs>`,o=`<svg width="${c[t]}" height="${d[t]}" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 ${c[t]} ${d[t]}">\n                  ${r}\n                  <g mask="url(#MDWCircle${t+1})">\n                    <image href="${g}" width="${c[t]}" height="${d[t]}" style="transform: scale(${$.start}); transform-origin: center center; filter: brightness(${u.start});" preserveAspectRatio="xMidYMid slice"></image>\n                  </g>\n                </svg>`,m.find("svg").remove(),m.append(o)})),p()}))}(jQuery);